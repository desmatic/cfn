#################
# Author:      Des Jones
# Project:     DC automation
# Date:        Fri 14 Oct 10:19:09 BST 2022
# Version:     1.01
# Git:         https://github.com/desmatic/cfn
#

###################################################

AWSTemplateFormatVersion: 2010-09-09
Description: amzn2 bastion dc-aws-1.01

Parameters:
  DSAEC2ServerSecurityGroupID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Administrative security group to add access from.
  BastionEC2ServerSecurityGroupID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Administrative security group to add access from.
  PowerOff:
    Description: 'PowerOff all instances using cron expression, for example: 0 19 * * * (or never)'
    Type: String
    Default: '0 19 * * *'
  CreatedBy:
    Default: desjones
    Description: Resource name for tagging resources
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9-]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  OwnerName:
    Default: devops
    Description: Resource owners name for tagging resources
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9-]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  OracleSID:
    Default: ORACLEDB
    Description: Oracle Service Identifier (SID) - a short name to uniquely identify the database instance.
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[A-Z][A-Z0-9]*'
    ConstraintDescription: upper case alphanumeric characters.
  KeyPairName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: The name of an existing Amazon EC2 key pair in the region where the project is created, which you can use to SSH into the new Amazon EC2 Linux instances.
    Default: devops
  PortService:
    Default: 1521
    Description: Service port number for requests
    Type: Number
    MinValue: 1
    MaxValue: 65535
    ConstraintDescription: must be between 1 and 65535.
  ServiceNetwork:
    Description: The IP address range that can be used to access the service
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.0.0/8
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type: String
    AllowedValues:
      - ami-092b43193629811af
    Default: ami-092b43193629811af
  EC2InstanceType:
    Type: String
    Description: The type of Amazon EC2 Linux instances that will be launched for this project.
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
    Default: t3.small
  EC2ServerCapacity:
    Default: '0'
    Description: The initial number of EC2Server instances
    Type: Number
    MinValue: '0'
    MaxValue: '3'
    ConstraintDescription: must be between 1 and 5 EC2 instances.
  DataDiskSize:
    Default: '18'
    Description: Disk volume in gigabytes
    Type: Number
    MinValue: '18'
    MaxValue: '3335'
    ConstraintDescription: must be between 12 and 3335.
  AllowPublicSSH:
    Description: Allow ssh access on port 2222 from internet.
    Type: String
    AllowedValues:
      - yes
      - no
    Default: yes
  HostedZoneID:
    Description: DNS Hosted Zone ID
    Type: 'AWS::Route53::HostedZone::Id'
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: The ID of the Amazon Virtual Private Cloud (VPC) to use for Amazon EC2 instances.

Conditions:
  HasPowerOff:
    !Not [!Equals [!Ref PowerOff, never]]
  HasPublicSSH:
    !Equals [!Ref AllowPublicSSH, yes]

Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
  InstancePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - route53:ChangeResourceRecordSets
          - sns:Publish
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - iam:PassRole
          Resource: "*"
      Roles:
      - Ref: InstanceRole
      PolicyName: !Ref AWS::StackName
    DependsOn: InstanceRole
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: InstanceRole
    DependsOn: InstancePolicy
  EC2ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable service port and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/8
        - IpProtocol: tcp
          FromPort: !Ref PortService
          ToPort: !Ref PortService
          CidrIp: !Ref ServiceNetwork
      Tags:
        - Key: Name
          Value: !Join
          - '-'
          - - !Ref AWS::StackName
        - Key: base-stack-name
          Value: !Ref AWS::StackName
        - Key: base-stack-id
          Value: !Ref AWS::StackId
        - Key: createdby
          Value: !Ref CreatedBy
        - Key: owner
          Value: !Ref OwnerName
        - Key: service
          Value: sg
      VpcId: !Ref VpcId
  EC2ServerSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: -1
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId:
        Fn::GetAtt:
        - EC2ServerSecurityGroup
        - GroupId
      GroupId:
        Fn::GetAtt:
        - EC2ServerSecurityGroup
        - GroupId
  EC2ServerSecurityGroupIngressPortService:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      FromPort: !Ref PortService
      ToPort: !Ref PortService
      GroupId: !Ref EC2ServerSecurityGroup
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref DSAEC2ServerSecurityGroupID
  EC2ServerSecurityGroupIngressSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: HasPublicSSH
    Properties:
      FromPort: 2222
      ToPort: 2222
      GroupId: !Ref EC2ServerSecurityGroup
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
  EC2PlacementGroup:
    Type: AWS::EC2::PlacementGroup
    Properties:
      Strategy: spread
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Ref AWS::StackName
      LaunchTemplateData:
        InstanceType: !Ref EC2InstanceType
        KeyName: !Ref KeyPairName
        ImageId: !Ref LatestAmiId
        EbsOptimized: true
        # InstanceMarketOptions:
        #   MarketType: spot
        #   SpotOptions:
        #     SpotInstanceType: one-time
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
            - InstanceProfile
            - Arn
        SecurityGroupIds:
          - !Ref EC2ServerSecurityGroup
          - !Ref DSAEC2ServerSecurityGroupID
          - !Ref BastionEC2ServerSecurityGroupID
        BlockDeviceMappings:
          - DeviceName: "/dev/sda1"
            Ebs:
              VolumeSize: 24
              VolumeType: gp3
              Encrypted: true
          - DeviceName: "/dev/xvdb"
            Ebs:
              VolumeSize: !Ref DataDiskSize
              VolumeType: gp3
              Encrypted: true
          - DeviceName: "/dev/xvdc"
            Ebs:
              VolumeSize: !Ref DataDiskSize
              VolumeType: gp3
              Encrypted: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Join
                - '-'
                - - !Ref AWS::StackName
              - Key: base-stack-name
                Value: !Ref AWS::StackName
              - Key: base-stack-id
                Value: !Ref AWS::StackId
              - Key: createdby
                Value: !Ref CreatedBy
              - Key: owner
                Value: !Ref OwnerName
              - Key: service
                Value: jumpbox
              - Key: node-type
                Value: mayfly
              - Key: node-role
                Value: !Ref AWS::StackName
              - Key: ddns
                Value: !Ref AWS::StackName
              - Key: round-robin
                Value: true
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: !Join
                - '-'
                - - !Ref AWS::StackName
              - Key: base-stack-name
                Value: !Ref AWS::StackName
              - Key: base-stack-id
                Value: !Ref AWS::StackId
              - Key: createdby
                Value: !Ref CreatedBy
              - Key: owner
                Value: !Ref OwnerName
              - Key: service
                Value: jumpbox
              - Key: node-type
                Value: mayfly
              - Key: node-role
                Value: !Ref AWS::StackName
        UserData: !Base64
          'Fn::Join':
            - ''
            - - |
                #!/bin/bash -xe
              - |
              - AWS_REGION=
              - !Ref 'AWS::Region'
              - |+

              - AWS_STACK_NAME=
              - !Ref 'AWS::StackName'
              - |+

              - HOSTED_ZONE_ID=
              - !Ref 'HostedZoneID'
              - |+

              - ORACLE_SID=
              - !Ref 'OracleSID'
              - |+

              - |
                # Restart SSH on port 2222
                yum install -y policycoreutils-python-utils
                semanage port -a -t ssh_port_t -p tcp 2222
                sed -i 's/#Port 22/Port 22\nPort 2222/' /etc/ssh/sshd_config
                systemctl restart sshd

              - |
                # Register DNS name
                yum install -y python3-pip
                pip3 install awscli
                ln -s /usr/local/bin/aws /usr/bin/aws
                IPADDR=`ip route get 8.8.8.8 | awk '{ for (nn=1;nn<=NF;nn++) if ($nn~"src") print $(nn+1) }'`
                FQDN_HOSTNAME=`hostname --fqdn`
                /usr/local/bin/aws route53 change-resource-record-sets --hosted-zone-id ${HOSTED_ZONE_ID} --change-batch "{ \"Comment\": \"ORACLEDB A record\", \"Changes\": [{ \"Action\": \"CREATE\", \"ResourceRecordSet\": { \"Name\": \"${FQDN_HOSTNAME}\", \"Type\": \"A\", \"TTL\": 120, \"ResourceRecords\": [{ \"Value\": \"${IPADDR}\"}] }}] }" || echo "record already exists"

              - |
                # Mount Oracle data disk
                mkfs.xfs /dev/nvme1n1
                mkdir -p /opt/oracle/oradata/
                echo '/dev/nvme1n1       /opt/oracle/oradata/       xfs     defaults        0       0' >> /etc/fstab
                mount /opt/oracle/oradata/

              - |
                # Install Oracle using RPMs
                yum install -y https://s3.us-east-2.amazonaws.com/s3repo.dc1.localdomain.net/oracle/19c/oracle-database-preinstall-19c-1.0-2.el8.x86_64.rpm
                chown -R oracle:oinstall /opt/oracle
                yum install -y https://s3.us-east-2.amazonaws.com/s3repo.dc1.localdomain.net/oracle/19c/oracle-database-ee-19c-1.0-1.x86_64.rpm
                echo "/opt/oracle/product/19c/dbhome_1/lib" > /etc/ld.so.conf.d/oracle.conf
                ldconfig
                cat << 'EOF' >> /home/oracle/.bash_profile
                export ORACLE_BASE=/opt/oracle/oradata
                export ORACLE_HOME=/opt/oracle/product/19c/dbhome_1
                export PATH=$PATH:$ORACLE_HOME/bin
                EOF

              - |
                # Setup SSH for Oracle user
                cp -a /home/ec2-user/.ssh /home/oracle
                chown -R oracle: /home/oracle/.ssh

              - |
                # Create Oracle SID database scripts
                cp -f /etc/sysconfig/oracledb_ORCLCDB-19c.conf /etc/sysconfig/oracledb_${ORACLE_SID}-19c.conf
                cp -f /etc/init.d/oracledb_ORCLCDB-19c /etc/init.d/oracledb_${ORACLE_SID}-19c
                sed -i "s@export ORACLE_SID=ORCLCDB@export ORACLE_SID=${ORACLE_SID}@" /etc/init.d/oracledb_${ORACLE_SID}-19c
                # Enable archive logs for GoldenGate
                sed -i 's@-emExpressPort $EM_EXPRESS_PORT@-emExpressPort $EM_EXPRESS_PORT -recoveryAreaDestination ${ORACLE_DATA_LOCATION}/fast_recovery_area/{DB_UNIQUE_NAME} -enableArchive true@' /etc/init.d/oracledb_${ORACLE_SID}-19c
                # Create the database
                /etc/init.d/oracledb_${ORACLE_SID}-19c configure
                sed -i "s@${ORACLE_SID}:/opt/oracle/product/19c/dbhome_1:N@${ORACLE_SID}:/opt/oracle/product/19c/dbhome_1:Y@" /etc/oratab
                ln -s ../init.d/oracledb_${ORACLE_SID}-19c /etc/rc3.d/99-oracledb
                # Update oracle user profile with SID
                cat << EOF >> /home/oracle/.bash_profile
                export ORACLE_SID=$ORACLE_SID
                EOF

              - |
                # Install rlwrap
                dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
                yum install -y rlwrap
                cat << 'EOF' >> /home/oracle/.bashrc
                alias sqlplus='rlwrap sqlplus'
                alias rman='rlwrap rman'
                EOF

              - |
                # Install GoldenGate
                curl -o /root/gg19.1-oracle-linux64.zip https://s3.us-east-2.amazonaws.com/s3repo.dc1.localdomain.net/oracle/goldengate/gg19.1-oracle-linux64.zip
                unzip /root/gg19.1-oracle-linux64.zip -d /home/oracle/gg19.1
                chown -R oracle: /home/oracle/gg19.1
                cat > /home/oracle/oggcore.rsp << 'EOF'
                ######################################################################
                ## Copyright(c) Oracle Corporation 2016, 2019. All rights reserved. ##
                ##                                                                  ##
                ## Specify values for the variables listed below to customize       ##
                ## your installation.                                               ##
                ##                                                                  ##
                ## Each variable is associated with a comment. The comment          ##
                ## can help to populate the variables with the appropriate          ##
                ## values.                                                          ##
                ##                                                                  ##
                ## IMPORTANT NOTE: This file should be secured to have read         ##
                ## permission only by the Oracle user or an administrator who       ##
                ## owns this installation to protect any sensitive input values.    ##
                ##                                                                  ##
                ######################################################################

                #-------------------------------------------------------------------------------
                # Do not change the following system generated value.
                #-------------------------------------------------------------------------------
                oracle.install.responseFileVersion=/oracle/install/rspfmt_ogginstall_response_schema_v19_1_0


                ################################################################################
                ##                                                                            ##
                ## Oracle GoldenGate installation option and details                          ##
                ##                                                                            ##
                ################################################################################

                #-------------------------------------------------------------------------------
                # Specify the installation option.
                # Specify ORA19c for installing Oracle GoldenGate for Oracle Database 19c and
                #         ORA18c for installing Oracle GoldenGate for Oracle Database 18c and
                #         ORA12c for installing Oracle GoldenGate for Oracle Database 12c and
                #         ORA11g for installing Oracle GoldenGate for Oracle Database 11g
                #-------------------------------------------------------------------------------
                INSTALL_OPTION=ORA19c

                #-------------------------------------------------------------------------------
                # Specify a location to install Oracle GoldenGate
                #-------------------------------------------------------------------------------
                SOFTWARE_LOCATION=/opt/oracle/product/19c/ogg

                #-------------------------------------------------------------------------------
                # Specify true to start the manager after installation.
                # Valid only for legacy installation.
                #-------------------------------------------------------------------------------
                START_MANAGER=false

                #-------------------------------------------------------------------------------
                # Specify a free port within the valid range for the manager process.
                # Required only if START_MANAGER is true.
                # Valid only for legacy installation.
                #-------------------------------------------------------------------------------
                MANAGER_PORT=7809

                #-------------------------------------------------------------------------------
                # Specify the location of the Oracle Database.
                # Required only if START_MANAGER is true.
                # Valid only for legacy installation.
                #-------------------------------------------------------------------------------
                DATABASE_LOCATION=/opt/oracle/product/19c/dbhome_1


                ################################################################################
                ##                                                                            ##
                ## Specify details to Create inventory for Oracle installs                    ##
                ## Required only for the first Oracle product install on a system.            ##
                ##                                                                            ##
                ################################################################################

                #-------------------------------------------------------------------------------
                # Specify the location which holds the install inventory files.
                # This is an optional parameter if installing on
                # Windows based Operating System.
                #-------------------------------------------------------------------------------
                INVENTORY_LOCATION=/opt/oracle/oraInventory

                #-------------------------------------------------------------------------------
                # Unix group to be set for the inventory directory.
                # This parameter is not applicable if installing on
                # Windows based Operating System.
                #-------------------------------------------------------------------------------
                UNIX_GROUP_NAME=oinstall
                EOF
                chown oracle: /home/oracle/oggcore.rsp
                /bin/su -s /bin/bash oracle -c "/home/oracle/gg19.1/fbo_ggs_Linux_x64_shiphome/Disk1/runInstaller -silent -nowait -ignoreSysPrereqs -responseFile /home/oracle/oggcore.rsp"
                #rm -rf /home/oracle/gg19.1 /root/gg19.1-oracle-linux64.zip
                cat << 'EOF' >> /home/oracle/.bash_profile
                export PATH=$PATH:/opt/oracle/product/19c/ogg
                EOF

              - |
                # Install SQLDeveloper
                yum install -y java-11-openjdk java-11-openjdk-devel
                curl -o /root/sqldeveloper-22.2.1.234.1810-no-jre.zip https://s3.us-east-2.amazonaws.com/s3repo.dc1.localdomain.net/oracle/sqldeveloper/sqldeveloper-22.2.1.234.1810-no-jre.zip
                unzip /root/sqldeveloper-22.2.1.234.1810-no-jre.zip -d /home/oracle/
                rm -rf /root/sqldeveloper-22.2.1.234.1810-no-jre.zip
                chown -R oracle: /home/oracle/sqldeveloper

              - |
                # Install DB2 dependency RPMs
                yum install -y patch make perl perl-Sys-Syslog python2 m4 ksh mksh psmisc gcc gcc-c++ cpp \
                  glibc glibc.i686 libstdc++ libstdc++.i686 pam pam.i686 libaio kernel-devel kernel-headers \
                  sg3_utils sg3_utils-libs

              - |
                # Mount DB2 data disk
                mkfs.xfs /dev/nvme2n1
                mkdir -p /home/db2inst1
                echo '/dev/nvme2n1       /home/db2inst1       xfs     defaults        0       0' >> /etc/fstab
                mount /home/db2inst1

              - |
                # Install DB2 with password MySecret
                curl -o /root/v11.5.7_linuxx64_server_dec.tar.gz https://s3.us-east-2.amazonaws.com/s3repo.dc1.localdomain.net/db2/v11.5.7_linuxx64_server_dec.tar.gz
                tar xvzf /root/v11.5.7_linuxx64_server_dec.tar.gz -C /root/
                rm -rf /root/v11.5.7_linuxx64_server_dec.tar.gz
                cat << 'EOF' >> /root/db2server.rsp
                *-----------------------------------------------------
                *  Product Installation
                LIC_AGREEMENT       = ACCEPT
                PROD       = DB2_SERVER_EDITION
                FILE       = /opt/ibm/db2/V11.5
                INSTALL_TYPE       = TYPICAL
                *-----------------------------------------------
                *  Das properties
                *-----------------------------------------------
                DAS_CONTACT_LIST       = LOCAL
                * ----------------------------------------------
                *  Instance properties
                * ----------------------------------------------
                INSTANCE       = inst1
                inst1.TYPE       = ese
                *  Instance-owning user
                inst1.NAME       = db2inst1
                inst1.GROUP_NAME       = db2iadm1
                inst1.HOME_DIRECTORY       = /home/db2inst1
                inst1.PASSWORD       = 352344135633169640036366254184691692764746514430675844528145077242804631510155032653454113485021235412125516435300516855254404204936738295761451371169610565656630273294069914624134443193155691503137740561068336335270457172313503554940104481447562370326854667288442416444560324370588558513212128440168342355272782214152364962040330454641403425181452639091251458442720761854707451342686573247767121195447282073425958496366335595823223116485135935584858042088585320385837108203507416466632733739995355329425498014948216213396415086324722510459426292489354403308646369533151494644285935014624494437521938623222284652451352450146472435922189245592740157382430656468171962477372364422926651491433835036915137662395289148830896824643661195014970883213424625627970102937894457
                ENCRYPTED       = inst1.PASSWORD
                inst1.AUTOSTART       = YES
                inst1.SVCENAME       = db2c_db2inst1
                inst1.PORT_NUMBER       = 25010
                inst1.FCM_PORT_NUMBER       = 20016
                inst1.MAX_LOGICAL_NODES       = 6
                inst1.CONFIGURE_TEXT_SEARCH       = NO
                *  Fenced user
                inst1.FENCED_USERNAME       = db2fenc1
                inst1.FENCED_GROUP_NAME       = db2fadm1
                inst1.FENCED_HOME_DIRECTORY       = /home/db2fenc1
                inst1.FENCED_PASSWORD       = 666339230240575357342357869437631532114123375728181541386447572828159224271124634443643433031346172518263895612346086251537452436247518836311402244488182653652240031461953746644783764202439942141153041802913034664395553800095197808370416163146539895333346217543355655077241413162788105612842726857864312645439720794938685331155628274152605319841532375422021408711631723463322793814182515713071343396524974621653844143362247138123450617345559317192403699631944642169112156463326454395362723238453284243259920215257375883035696383443554139058868506642446005625294080131253906921620538224334357648362345423595344300044435229829147597212557643264813533971906401376444749210249961729743481248130532071662861664291634951625151378340545781143627052452147386059899430452725136
                ENCRYPTED       = inst1.FENCED_PASSWORD
                *-----------------------------------------------
                *  Installed Languages
                *-----------------------------------------------
                LANG       = EN
                EOF
                /root/server_dec/db2setup -r /root/db2server.rsp -c && /root/server_dec/db2setup -r /root/db2server.rsp && rm -rf /root/server_dec

              - |
                # Install DB2 JDBC
                curl -o /root/v11.5.4_jdbc_sqlj.tar.gz https://s3.us-east-2.amazonaws.com/s3repo.dc1.localdomain.net/db2/v11.5.4_jdbc_sqlj.tar.gz
                tar xvzf /root/v11.5.4_jdbc_sqlj.tar.gz -C /root
                unzip /root/jdbc_sqlj/db2_db2driver_for_jdbc_sqlj.zip -d /usr/lib/java/db2jdbc && rm -rf /root/jdbc_sqlj/ /root/v11.5.4_jdbc_sqlj.tar.gz
    DependsOn:
      - InstanceProfile
  EC2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: 0
      MaxSize: 3
      DesiredCapacity: !Ref EC2ServerCapacity
      VPCZoneIdentifier:
        - !Select [ 0, !Ref Subnets ]
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version:
          Fn::GetAtt:
            - LaunchTemplate
            - LatestVersionNumber
      PlacementGroup: !Ref EC2PlacementGroup
      MaxInstanceLifetime: 604800
      TerminationPolicies:
        - OldestLaunchConfiguration
        - OldestLaunchTemplate
        - OldestInstance
    #CreationPolicy:
      #ResourceSignal:
        #Timeout: PT5M
        #Count: !Ref EC2ServerCapacity
    #UpdatePolicy:
      #AutoScalingScheduledAction:
        #IgnoreUnmodifiedGroupSizeProperties: true
      #AutoScalingRollingUpdate:
        #MinInstancesInService: 1
        #WaitOnResourceSignals: true
  EC2AutoScalingScheduledAction:
    Type: AWS::AutoScaling::ScheduledAction
    Condition: HasPowerOff
    Properties:
      AutoScalingGroupName: !Ref EC2AutoScalingGroup
      DesiredCapacity: 0
      Recurrence: !Ref PowerOff

Outputs:
  EC2ServerSecurityGroup:
    Description: EC2 instances security group
    Value: !Ref EC2ServerSecurityGroup
